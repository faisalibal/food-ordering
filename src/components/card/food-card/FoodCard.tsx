import { useEffect } from "react";
import { FoodDTO } from "../../../DTO/FoodDTO";
import { addChartModalTrue } from "../../../redux/AddChartModal";
import { fetchFoodId } from "../../../redux/FoodSlice";
import { useAppDispatch } from "../../../redux/hook";
import "./FoodCard.css";

type foodType = {
  foodItem: FoodDTO;
};

export const FoodCard = ({ foodItem }: foodType) => {
  const dispatch = useAppDispatch();

  const handleModal = () => {
    const dispatchHandle = async () => {
      await dispatch(fetchFoodId(foodItem.id));
      await dispatch(addChartModalTrue());
    };
    dispatchHandle();
  };

  return (
    <div className="food-card-container">
      <div className="foodcard-image">
        <img
          src={foodItem.image}
          alt="food-image"
          style={foodItem.available ? {} : { filter: "grayscale(100%" }}
        />
      </div>
      <div style={{ padding: "0px 8px" }}>
        <p className="food-name">{foodItem.name}</p>
      </div>
      <div
        className="price-container"
        style={{ padding: "0px 8px", paddingBottom: "8px" }}
      >
        <span className="food-price">
          Rp. {foodItem.price.toLocaleString()}
        </span>
        <span
          className="basket-icon"
          style={{ background: foodItem.available ? "#F19F5D" : "#DCDBD9" }}
          onClick={foodItem.available ? () => handleModal() : () => {}}
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M0.53335 0C0.391897 0 0.256237 0.0561903 0.156215 0.15621C0.0561921 0.256229 0 0.391885 0 0.533333C0 0.674782 0.0561921 0.810438 0.156215 0.910457C0.256237 1.01048 0.391897 1.06667 0.53335 1.06667H1.71739L2.14513 2.7808L3.74305 11.2981C3.76593 11.4204 3.83079 11.5307 3.92643 11.6102C4.02206 11.6897 4.14246 11.7332 4.2668 11.7333H5.3335C4.76769 11.7333 4.22505 11.9581 3.82496 12.3582C3.42487 12.7583 3.2001 13.3009 3.2001 13.8667C3.2001 14.4325 3.42487 14.9751 3.82496 15.3752C4.22505 15.7752 4.76769 16 5.3335 16C5.89931 16 6.44195 15.7752 6.84204 15.3752C7.24213 14.9751 7.4669 14.4325 7.4669 13.8667C7.4669 13.3009 7.24213 12.7583 6.84204 12.3582C6.44195 11.9581 5.89931 11.7333 5.3335 11.7333H12.8004C12.2346 11.7333 11.6919 11.9581 11.2919 12.3582C10.8918 12.7583 10.667 13.3009 10.667 13.8667C10.667 14.4325 10.8918 14.9751 11.2919 15.3752C11.6919 15.7752 12.2346 16 12.8004 16C13.3662 16 13.9088 15.7752 14.3089 15.3752C14.709 14.9751 14.9338 14.4325 14.9338 13.8667C14.9338 13.3009 14.709 12.7583 14.3089 12.3582C13.9088 11.9581 13.3662 11.7333 12.8004 11.7333H13.8671C13.9914 11.7332 14.1118 11.6897 14.2075 11.6102C14.3031 11.5307 14.368 11.4204 14.3908 11.2981L15.9909 2.7648C16.0053 2.68783 16.0026 2.60862 15.9829 2.53282C15.9633 2.45701 15.9272 2.38647 15.8772 2.32619C15.8272 2.26591 15.7645 2.21739 15.6937 2.18405C15.6228 2.15072 15.5455 2.13341 15.4671 2.13333H3.08276L2.65075 0.404267C2.62196 0.288836 2.5554 0.186345 2.46166 0.113093C2.36791 0.0398407 2.25237 3.28656e-05 2.1334 0H0.53335ZM6.4002 13.8667C6.4002 14.1496 6.28781 14.4209 6.08777 14.6209C5.88772 14.821 5.6164 14.9333 5.3335 14.9333C5.05059 14.9333 4.77927 14.821 4.57923 14.6209C4.37918 14.4209 4.2668 14.1496 4.2668 13.8667C4.2668 13.5838 4.37918 13.3125 4.57923 13.1124C4.77927 12.9124 5.05059 12.8 5.3335 12.8C5.6164 12.8 5.88772 12.9124 6.08777 13.1124C6.28781 13.3125 6.4002 13.5838 6.4002 13.8667ZM13.8671 13.8667C13.8671 14.1496 13.7547 14.4209 13.5547 14.6209C13.3546 14.821 13.0833 14.9333 12.8004 14.9333C12.5175 14.9333 12.2462 14.821 12.0461 14.6209C11.8461 14.4209 11.7337 14.1496 11.7337 13.8667C11.7337 13.5838 11.8461 13.3125 12.0461 13.1124C12.2462 12.9124 12.5175 12.8 12.8004 12.8C13.0833 12.8 13.3546 12.9124 13.5547 13.1124C13.7547 13.3125 13.8671 13.5838 13.8671 13.8667ZM9.6003 4.8V6.4H11.2003C11.3418 6.4 11.4775 6.45619 11.5775 6.55621C11.6775 6.65623 11.7337 6.79188 11.7337 6.93333C11.7337 7.07478 11.6775 7.21044 11.5775 7.31046C11.4775 7.41048 11.3418 7.46667 11.2003 7.46667H9.6003V9.06667C9.6003 9.20812 9.5441 9.34377 9.44408 9.44379C9.34406 9.54381 9.2084 9.6 9.06695 9.6C8.92549 9.6 8.78983 9.54381 8.68981 9.44379C8.58979 9.34377 8.5336 9.20812 8.5336 9.06667V7.46667H6.93355C6.79209 7.46667 6.65644 7.41048 6.55641 7.31046C6.45639 7.21044 6.4002 7.07478 6.4002 6.93333C6.4002 6.79188 6.45639 6.65623 6.55641 6.55621C6.65644 6.45619 6.79209 6.4 6.93355 6.4H8.5336V4.8C8.5336 4.65855 8.58979 4.5229 8.68981 4.42288C8.78983 4.32286 8.92549 4.26667 9.06695 4.26667C9.2084 4.26667 9.34406 4.32286 9.44408 4.42288C9.5441 4.5229 9.6003 4.65855 9.6003 4.8Z"
              fill="#FFFCFA"
            />
          </svg>
        </span>
      </div>
    </div>
  );
};
